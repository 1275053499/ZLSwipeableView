{"name":"ZLSwipeableView","tagline":"A simple view for building card like interface like Tinder and Potluck.","body":"ZLSwipeableView\r\n===============\r\nA simple view for building card like interface like [Tinder](http://www.gotinder.com/) and [Potluck](https://www.potluck.it/).\r\n\r\nPreview\r\n---\r\n###Swipe\r\n![swipe](https://github.com/zhxnlai/ZLSwipeableView/raw/master/Previews/swipe.gif)\r\n###Swipe Cancel\r\n![cancel](https://github.com/zhxnlai/ZLSwipeableView/raw/master/Previews/swipeCancel.gif)\r\n###Swipe Programmatically\r\n![swipeLeft](https://github.com/zhxnlai/ZLSwipeableView/raw/master/Previews/swipeLeft.gif)\r\n###Swipe Programmatically II\r\n![swipeLeftRight](https://github.com/zhxnlai/ZLSwipeableView/raw/master/Previews/swipeLeftRight.gif)\r\n\r\nCocoaPods\r\n---\r\nYou can install `ZLSwipeableView` through CocoaPods adding the following to your Podfile:\r\n\r\n    pod 'ZLSwipeableView'\r\n\r\nUsage\r\n---\r\nCheck out the [demo app](https://github.com/zhxnlai/ZLSwipeableView/archive/master.zip) for an example.\r\n\r\n`ZLSwipeableView` can be added to storyboard or initialized programmatically:\r\n~~~objective-c\r\nZLSwipeableView *swipeableView = [[ZLSwipeableView alloc] initWithFrame:self.view.frame];\r\n[self.view addSubview:swipeableView];\r\n~~~\r\n\r\nA `ZLSwipeableView` **must** have an object that implements `ZLSwipeableViewDelegate` to act as a data source. `ZLSwipeableView` will prefetch **three** views in advance to animate them.\r\n~~~objective-c\r\n// required data source\r\nself.swipeableView.dataSource = self;\r\n\r\n#pragma mark - ZLSwipeableViewDataSource\r\n- (UIView *)nextViewForSwipeableView:(ZLSwipeableView *)swipeableView {\r\n  return [[UIView alloc] init];\r\n}\r\n~~~\r\nA `ZLSwipeableView` can have an optional delegate to receive callback.\r\n~~~objective-c\r\n// optional delegate\r\nself.swipeableView.delegate = self;\r\n\r\n#pragma mark - ZLSwipeableViewDelegate\r\n- (void)swipeableView: (ZLSwipeableView *)swipeableView didSwipeLeft:(UIView *)view {\r\n    NSLog(@\"did swipe left\");\r\n}\r\n- (void)swipeableView: (ZLSwipeableView *)swipeableView didSwipeRight:(UIView *)view {\r\n    NSLog(@\"did swipe right\");\r\n}\r\n- (void)swipeableView:(ZLSwipeableView *)swipeableView didStartSwipingView:(UIView *)view atLocation:(CGPoint)location {\r\n    NSLog(@\"did start swiping at location: x %f, y%f\", location.x, location.y);\r\n}\r\n- (void)swipeableView: (ZLSwipeableView *)swipeableView swipingView:(UIView *)view atLocation:(CGPoint)location {\r\n    NSLog(@\"swiping at location: x %f, y%f\", location.x, location.y);\r\n}\r\n- (void)swipeableView:(ZLSwipeableView *)swipeableView didEndSwipingView:(UIView *)view atLocation:(CGPoint)location {\r\n    NSLog(@\"did start swiping at location: x %f, y%f\", location.x, location.y);\r\n}\r\n~~~\r\n\r\nTo swipe the top view programmatically:\r\n~~~objective-c\r\n[self.swipeableView swipeTopViewToLeft];\r\n[self.swipeableView swipeTopViewToRight];\r\n~~~\r\n\r\nTo discard all views and reload programmatically:\r\n~~~objective-c\r\n[self.swipeableView discardAllSwipeableViews];\r\n[self.swipeableView loadNextSwipeableViewsIfNeeded];\r\n~~~\r\n\r\nRequirements\r\n---\r\n- iOS 7 or higher.\r\n- Automatic Reference Counting (ARC).\r\n\r\nContributions\r\n---\r\n- Thanks [iamphill](https://github.com/iamphill) for adding new delegates\r\n\r\nLicense\r\n---\r\nZLSwipeableView is available under MIT license. See the LICENSE file for more info.\r\n","google":"UA-55968401-2","note":"Don't delete this file! It's used internally to help with page regeneration."}